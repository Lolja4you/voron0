[include mainsail.cfg]
[include V0Display.cfg]
# [include ./klicky/klicky-probe.cfg]


[mcu]
serial: /dev/serial/by-id/usb-Klipper_rp2040_504450613077211C-if00     
# serial: /dev/ttyAMA0
# serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_0E0003801843565335383120-if00  
restart_method: command

[mcu display]
serial: /dev/serial/by-id/usb-Klipper_stm32f042x6_0E0003801843565335383120-if00  

[virtual_sdcard]
path: /home/voron0/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[temperature_sensor btt_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[printer]
kinematics: corexy
max_velocity: 500
max_accel: 400
max_z_velocity: 15
max_z_accel: 300
square_corner_velocity: 6.0

#####################################################################
#      X/Y Stepper Settings
#####################################################################

[stepper_x]
step_pin: gpio11
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: !gpio10                                                     # Check motor direction in link above. If inverted, add a ! before gpio10
enable_pin: !gpio12
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_x:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 20                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true
step_pulse_duration: 0.000001

[tmc2209 stepper_x]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 0
interpolate: False
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
# rated_motor_current * 0.707 * 65% = 1.5A * .707 * .65 = 0.69
run_current: 1     
sense_resistor: 0.110
stealthchop_threshold: 200                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio4    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 45  												# this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

[stepper_y]
step_pin: gpio6
## Refer to https://docs.vorondesign.com/build/startup/#v0
dir_pin: !gpio5                                                      # Check motor direction in link above. If inverted, add a ! before gpio5
enable_pin: !gpio7
rotation_distance: 40
microsteps: 16
full_steps_per_rotation: 200                                        # Set to 400 for 0.9° degree stepper motor, 200 is for 1.8° stepper motors
endstop_pin: tmc2209_stepper_y:virtual_endstop
position_endstop: 120
position_max: 120
homing_speed: 20                                                    # for sensorless homing it is recommended not to go above 40mm/s   
homing_retract_dist: 0
homing_positive_dir: true
step_pulse_duration: 0.000001

[tmc2209 stepper_y]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 2
interpolate: False
# you need to calculate the run_current value using the equation (rated_motor_current * 0.707 = Maximum_run_current) start with a value that is about 60%-70% of your maximum value.
# rated_motor_current * 0.707 * 65% = 1.5A * .707 * .65 = 0.69
run_current: 1
sense_resistor: 0.110
stealthchop_threshold: 200                                            # Set to 999999 to turn stealthchop on, and 0 to use spreadcycle
diag_pin: ^gpio3    												# YOU NEED TO JUMP THIS DIAG PIN ON YOUR BOARD FOR SENSORLESS HOMING TO WORK 
driver_SGTHRS: 45										# this is set to 255 which is the MAX sensitivity for sensorless homing, you will need to tune this later

#####################################################################
#   Z Stepper Settings
#####################################################################
[stepper_z]
step_pin: gpio19
dir_pin: !gpio28
enable_pin: !gpio2
rotation_distance: 8
microsteps: 32
endstop_pin: tmc2209_stepper_z:virtual_endstop  # Используем probe как концевик
position_max: 121.1
position_min: -1.1
homing_speed: 15
second_homing_speed: 5.0
homing_retract_dist: 15.0

[tmc2209 stepper_z]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 1
interpolate: False
run_current: 0.55
sense_resistor: 0.110
stealthchop_threshold: 0
diag_pin: ^gpio25
driver_SGTHRS: 45	

[bed_mesh]
speed: 50
horizontal_move_z: 5
mesh_min: 15,15
mesh_max: 105,105
probe_count: 5,5
algorithm: bicubic
bicubic_tension: 0.2
# relative_reference_index: 12

# [probe]
# pin: 
# x_offset: 0
# y_offset: 0
# z_offset: 0
# speed: 5.0
# samples: 3
# sample_retract_dist: 3.0

[bed_mesh]
speed: 50
horizontal_move_z: 5
mesh_min: 15,15
mesh_max: 105,105
probe_count: 5,5
algorithm: bicubic
bicubic_tension: 0.2
# relative_reference_index: 12

[gcode_macro AUTO_BED_MESH]
gcode:
    # Сохраняем текущие настройки драйвера Z
    {% set Z_CURRENT = printer.configfile.settings['tmc2209 stepper_z'].run_current %}
    {% set Z_THRESH = printer.configfile.settings['tmc2209 stepper_z'].driver_SGTHRS %}
    
    # Настройки для probing
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.4
    SET_TMC_FIELD STEPPER=stepper_z FIELD=sgthrs VALUE=50
    
    # Проверяем калибровку осей
    {% if printer.toolhead.homed_axes != 'xyz' %}
        G28
    {% endif %}
    
    # Поднимаем Z перед началом
    G90
    G1 Z5 F1200
    
    # Инициализация сетки
    BED_MESH_CLEAR
    BED_MESH_CALIBRATE METHOD=manual
    
    # Параметры сетки (5x5 точек)
    {% set X_START = 20 %}      # Начало по X (мм)
    {% set X_END = 100 %}       # Конец по X (мм)
    {% set Y_START = 20 %}      # Начало по Y (мм)
    {% set Y_END = 100 %}       # Конец по Y (мм)
    {% set POINTS = 5 %}        # Количество точек по каждой оси
    
    # Вычисляем шаг между точками
    {% set X_STEP = (X_END - X_START) / (POINTS - 1) %}
    {% set Y_STEP = (Y_END - Y_START) / (POINTS - 1) %}
    
    # Цикл по всем точкам
    {% for y in range(POINTS) %}
        {% set Y_POS = Y_START + y * Y_STEP %}
        {% for x in range(POINTS) %}
            {% set X_POS = X_START + x * X_STEP %}
            
            # Перемещаемся к точке
            G1 X{X_POS} Y{Y_POS} F6000
            
            # Опускаемся до контакта с проверкой endstop
            G91
            {% set CONTACT = false %}
            {% for i in range(20) %}  # Максимально 20 попыток по 0.25мм
                G1 Z-0.25 F30  # Очень медленное опускание
                {% set Z_STOP_STATE = printer.stepper_z.endstop_pin.state %}  # Читаем состояние gpio25
                { action_respond_info("Z позиция: " ~ printer.toolhead.position.z ~ 
                  ", Endstop: " ~ Z_STOP_STATE) }
                
                {% if Z_STOP_STATE == 1 %}  # Проверяем endstop gpio25
                    {% set CONTACT = true %}
                    { action_respond_info("Контакт! X:" ~ X_POS ~ " Y:" ~ Y_POS ~ 
                      " Z:" ~ printer.toolhead.position.z) }
                    BREAK
                {% endif %}
            {% endfor %}
            
            {% if not CONTACT %}
                { action_respond_info("Ошибка: контакт не обнаружен в X:" ~ X_POS ~ 
                  " Y:" ~ Y_POS) }
                ABORT
            {% endif %}
            
            G90
            
            # Фиксируем точку (используем текущую Z позицию)
            SET_GCODE_OFFSET Z_ADJUST=0 MOVE=1
            G4 P300  # Пауза для стабилизации
            
            # Поднимаемся для следующей точки
            G91
            G1 Z3 F600  # Поднимаем на 3мм
            G90
        {% endfor %}
    {% endfor %}
    
    # Завершаем калибровку
    BED_MESH_CALIBRATE
    BED_MESH_PROFILE SAVE=nozzle_mesh
    
    # Восстанавливаем настройки
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={Z_CURRENT}
    SET_TMC_FIELD STEPPER=stepper_z FIELD=sgthrs VALUE={Z_THRESH}
    
    # Возвращаемся в центр
    G1 X60 Y60 Z10 F6000
    M117 Bed leveling complete!
#####################################################################
#   Extruder
#####################################################################

[extruder]
step_pin: gpio14
dir_pin: !gpio13                                                     # Add ! if moving opposite direction
enable_pin: !gpio15
#full_steps_per_rotation: 200                                       # Set to 200 for LDO 1.8° stepper motor, and set to 400 for OMC(StepperOnline) 0.9° stepper motor
rotation_distance: 23                                               # See calibrating rotation_distance on extruders doc
microsteps: 16
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: gpio23
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for NTC 100k 3950 thermistors
sensor_type: Generic 3950                         # default Formbot CHC V6
sensor_pin: gpio27
control: pid                                                        # Do PID calibration after initial checks
pid_Kp: 28.182
pid_Ki: 1.978
pid_Kd: 100.397
min_temp: 0
max_temp: 270
min_extrude_temp: 170
max_extrude_only_distance: 150
max_extrude_cross_section: 0.8
pressure_advance: 0.0                                               # See tuning pressure advance doc
pressure_advance_smooth_time: 0.040

[tmc2209 extruder]
uart_pin: gpio9
tx_pin: gpio8
uart_address: 3
interpolate: False
## For Formbot Moons
# rated_motor_current * 0.707 * .65 = 1 * 0.707 * 0.65 = 0.46
run_current:  0.8
sense_resistor: 0.110
stealthchop_threshold: 0                                            # Set to 0 for spreadcycle, avoid using stealthchop on extruder

#####################################################################
#   Bed Heater
#####################################################################

[heater_bed]
heater_pin: gpio21
## Check what thermistor type you have. See https://www.klipper3d.org/Config_Reference.html#common-thermistors for common thermistor types.
## Use "Generic 3950" for Keenovo heaters
sensor_type: Generic 3950
sensor_pin: gpio26
smooth_time: 3.0
#max_power: 0.6                                                     # Only needed for 100w pads
min_temp: 0
max_temp: 120
control: pid                                                        # Do PID calibration after initial checks
pid_kp: 68.453
pid_ki: 2.749
pid_kd: 426.122

#####################################################################
# Fan Control
#####################################################################

[heater_fan hotend_fan]
pin: gpio18
max_power: 1.0
kick_start_time: 0.5
heater: extruder
heater_temp: 40.0
#fan_speed: 1.0                                                     # You can't PWM the delta fan unless using blue wire

[fan]
pin: gpio17
max_power: 1.0
kick_start_time: 0.5                                                # Depending on your fan, you may need to increase this value if your fan will not start
off_below: 0.13
cycle_time: 0.010

[controller_fan MCU_fan]
pin: gpio20
max_power: 1.0
kick_start_time: 0.5
heater: extruder
#fan_speed: 1.0 




#####################################################################
#   Filament Runout Sensor
#####################################################################

#[filament_switch_sensor Filament_Runout_Sensor]
#pause_on_runout: True
#runout_gcode: PAUSE
#switch_pin: gpio16

#####################################################################
# Homing and Gantry Adjustment Routines
#####################################################################

[idle_timeout]
timeout: 1800

#[safe_z_home]
##home_xy_position: 120,120 										# these coordinates must NOT be greater than the values specified in "position_max:" for the X and Y steppers
#speed: 50.0
#z_hop: 5

## To be used with BED_SCREWS_ADJUST
[bed_screws]
screw1: 60,5
screw1_name: front screw
screw2: 5,115
screw2_name: back left
screw3: 115,115
screw3_name: back right

#####################################################################
# Neopixel
#####################################################################

[neopixel board_rgb]
pin: gpio24
chain_count: 1
color_order: GRB
initial_RED: 0.0
initial_GREEN: 0.1
initial_BLUE: 0.0

#####################################################################
#   V0 Display
#####################################################################
#x_offset: 2
#   Use X offset to shift the display towards the right. Value can be 0 to 3
#vcomh: 0
#   Set the Vcomh value on SSD1306/SH1106 displays. This value is
#   associated with a "smearing" effect on some OLED displays. The
#   value may range from 0 to 63. Default is 0.
#   Adjust this value if you get some vertical stripes on your display. (31 seems to be a good value)

[neopixel displayStatus]
pin: display:PA0
chain_count: 1
color_order: GRB
initial_RED: 0.2
initial_GREEN: 0.05
initial_BLUE: 0

#####################################################################
# Macros
#####################################################################
[gcode_macro SET_CUSTOM_FAN_SPEED]
description: Установка скорости вентилятора (0-100%)
gcode:
  {% if params.FAN == 'hotend' %}
    SET_FAN_SPEED FAN=hotend_fan SPEED={params.SPEED|float / 100}
  {% elif params.FAN == 'model' %}
      SET_FAN_SPEED FAN=fan SPEED={params.SPEED|float / 100}
  {% elif params.FAN == 'mcu' %}
    SET_FAN_SPEED FAN=mcu_fan SPEED={params.SPEED|float / 100}
  {% else %}
    {action_respond_info("Unknown fan type. Use: hotend, model or mcu")}
  {% endif %}

[gcode_macro CUSTOM_FAN_OFF]
description: Выключение всех вентиляторов
gcode:
  SET_FAN_SPEED FAN=hotend_auto_fan SPEED=0
  SET_FAN_SPEED FAN=model_auto_fan SPEED=0
  SET_FAN_SPEED FAN=mcu_fan SPEED=0
  
[gcode_macro PRINT_START]
gcode:
    # Инициализация принтера
    G90                             # Абсолютные координаты
    G1 X50 Y50 F20000              # Безопасная позиция
    
    # Хоуминг осей если нужно
    {% if printer.toolhead.homed_axes != 'xyz' %}
        G28                         # Полный хоуминг
    {% endif %}
    
    # Прогрев (параметры из слайсера)
    {% if 'BED' in params %}
        M140 S{params.BED|int}      # Начальный нагрев стола
    {% endif %}
    {% if 'EXTRUDER' in params %}
        M104 S{params.EXTRUDER|int} # Начальный нагрев экструдера
    {% endif %}
    
    # Ожидание прогрева
    {% if 'BED' in params %}
        M190 S{params.BED|int}      # Ожидание стола
    {% endif %}
    {% if 'EXTRUDER' in params %}
        M109 S{params.EXTRUDER|int} # Ожидание экструдера
    {% endif %}
    
    # Подготовка к печати
    G1 Z5 F3000                     # Подъем на 5мм
    G92 E0                          # Сброс экструдера
    {action_respond_info("Printer ready")}

[gcode_macro PRINT_END]
gcode:
    M400                            # Ожидание завершения движений
    G91                             # Относительные координаты
    G1 Z10 F3000                    # Подъем сопла
    G90                             # Абсолютные координаты
    G1 X50 Y120 F20000              # Парковка
    TURN_OFF_HEATERS                # Выключение нагревателей
    M107                            # Выключение вентилятора

[gcode_macro LOAD_FILAMENT]
gcode:
    M83                             # Относительный экструдер
    G1 E50 F300                     # Загрузка филамента
    G1 E-5 F300                     # Небольшой откат
    M82                             # Абсолютный экструдер

[gcode_macro UNLOAD_FILAMENT]
gcode:
    M83                             # Относительный экструдер
    G1 E-50 F1500                   # Выгрузка филамента
    M82                             # Абсолютный экструдер

[gcode_macro _HOME_X]
gcode:
    # Sensorless homing X
    {% set RUN_CURRENT = printer.configfile.settings['tmc2209 stepper_x'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT*0.7}
    G28 X
    G91
    G1 X-5 F1200
    G90
    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={RUN_CURRENT}

[gcode_macro _HOME_Y]
gcode:
    # Sensorless homing Y
    {% set RUN_CURRENT = printer.configfile.settings['tmc2209 stepper_y'].run_current|float %}
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT*0.7}
    G28 Y
    G91
    G1 Y-5 F1200
    G90
    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={RUN_CURRENT}

[gcode_macro HOME_Z]
gcode:
    # Проверка X/Y
    {% if printer.toolhead.homed_axes not in ['xyz', 'xy'] %}
        {% if 'x' not in printer.toolhead.homed_axes %}
            _HOME_X
        {% endif %}
        {% if 'y' not in printer.toolhead.homed_axes %}
            _HOME_Y
        {% endif %}
        G90
        G1 X50 Y50 F20000
    {% endif %}

    # Настройки для хоуминга Z
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.8

    # Первый хоуминг
    G28 Z
    G4 P500
    
    SET_GCODE_OFFSET Z=0  # Только установка смещения

    # Возврат настроек
    SET_TMC_CURRENT STEPPER=stepper_z CURRENT=0.55

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [stepper_z]
#*# position_endstop = 1.100
